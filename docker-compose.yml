version: '3.9'
services:
  users-db:
    image: postgres
    container_name: users-db
    environment:
      POSTGRES_DB: USERS
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    volumes:
      - users_db_data:/var/lib/postgresql/data
      - ./dumps/accounts_db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5431:5432"

  hospitals-db:
    image: postgres
    container_name: hospitals-db
    environment:
      POSTGRES_DB: HOSPITALS
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    volumes:
      - hospitals_db_data:/var/lib/postgresql/data
      - ./dumps/hospitals_db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  schedules-db:
    image: postgres
    container_name: schedules-db
    environment:
      POSTGRES_DB: SCHEDULE
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    volumes:
      - schedules_db_data:/var/lib/postgresql/data
      - ./dumps/schedules_db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"

  documents-db:
    image: postgres
    container_name: documents-db
    environment:
      POSTGRES_DB: DOCUMENTS
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    volumes:
      - documents_db_data:/var/lib/postgresql/data
      - ./dumps/documents_db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8180:8080"
    depends_on:
      - users-db
      - hospitals-db
      - schedules-db
      - documents-db

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin-data/servers.json:/pgadmin4/servers.json
    ports:
      - "8181:80"
    depends_on:
      - users-db
      - hospitals-db
      - schedules-db
      - documents-db
    restart: always

  users-service:
    build:
      context: ./accounts
    container_name: users-service
    environment:
      DATABASE_URL: postgres://postgres:123@users-db:5432/USERS
    ports:
      - "8081:8081"
    depends_on:
      - users-db

  hospitals-service:
    build:
      context: ./hospitals
    container_name: hospitals-service
    environment:
      DATABASE_URL: postgres://postgres:123@hospitals-db:5432/HOSPITALS
    ports:
      - "8082:8082"
    depends_on:
      - hospitals-db

  schedules-service:
    build:
      context: ./schedule
    container_name: schedules-service
    environment:
      DATABASE_URL: postgres://postgres:123@schedules-db:5432/SCHEDULE
    ports:
      - "8083:8083"
    depends_on:
      - schedules-db

  documents-service:
    build:
      context: ./documents
    container_name: documents-service
    environment:
      DATABASE_URL: postgres://postgres:123@documents-db:5432/DOCUMENTS
    ports:
      - "8084:8084"
    depends_on:
      - documents-db

  elasticsearch:
    image: bitnami/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - ELASTICSEARCH_NODE_NAME=elasticsearch
      - ELASTICSEARCH_CLUSTER_NAME=elasticsearch-cluster
      - ELASTICSEARCH_HEAP_SIZE=512m
      - ELASTICSEARCH_NETWORK_HOST=0.0.0.0
      - ELASTICSEARCH_SINGLE_NODE=true
    volumes:
      - es_data:/bitnami/elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  users_db_data:
  hospitals_db_data:
  schedules_db_data:
  documents_db_data:
  pgadmin_data:
  es_data:
